# This is a GitHub Actions workflow file named 'Update Donators'.
# The workflow is designed to update a list of donators and create a pull request if changes are detected.
# This workflow can be manually triggered and is also scheduled to run automatically on the first day of every month.

name: Update Donators

on:
  # Allows the workflow to be manually triggered
  workflow_dispatch:
  # Schedules the workflow to run on the first day of every month
  schedule:
    - cron: '0 0 1 * *'

jobs:
  update-donators:
    # Specifies that the job runs on the latest version of Ubuntu
    runs-on: ubuntu-latest

    steps:
    # Checks out a copy of your repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Sets up the necessary shell environment to run the script
    - name: Set up shell environment
      run: sudo apt-get install -y jq curl

    # Runs the retrieve-donators.sh script
    - name: Run retrieve-donators.sh
      run: |
        # Makes the script executable
        chmod +x scripts/retrieve-donators.sh
        # Executes the script
        ./scripts/retrieve-donators.sh

    # Check if there are any changes to the files.
    - name: Check for changes
      id: check_changes
      run: |
            # If there are changes, set the output variable 'changed' to 'true'.
            git diff --exit-code || echo "::set-output name=changed::true"

    # If there are changes, commit and push the changes to a new branch.
    - name: Commit and push if changed
      if: steps.check_changes.outputs.changed == 'true'
      run: |
            # Set the Git user name and email for the commit.
            git config --global user.name 'GitHub Actions'
            git config --global user.email 'actions@github.com'
            # Add the files to the Git staging area.
            git add content/_data/donators/donators.json
            # Commit the changes with a message.
            git commit -m "chore(sponsors): Update donators.json"

    # Create a pull request with the changes.
    - name: Create Pull Request
      if: steps.check_changes.outputs.changed == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        # The GitHub token is used to authenticate the action.
        token: ${{ secrets.GITHUB_TOKEN }}
        # The commit message for the pull request.
        commit-message: "chore(sponsors): Update donators.json"
        # The title of the pull request.
        title: "chore(sponsors): Update donators.json"
        # The body of the pull request.
        body: "This PR updates the donators.json file containing the list of people and companies that gave to Jenkins through  lfx.linuxfoundation.org."
        # The pull request branch name.
        branch: "update-donators"
        # Specifies that the branch should be deleted after the pull request is merged
        delete-branch: true
